const express = require('express');
const router = express.Router();

const availabilityRouter = require('../routes/availabilityRouter');
const ayacutnoncultivationRouter = require('../routes/ayacutnoncultivationRouter');
const boundaryDropPointsRouter = require('../routes/boundaryDropPointsRouter');
const bundIssueRouter = require('../routes/bundIssueRouter');
const barrelTypeRouter = require('../routes/barrelTypeRouter');
const bundRouter = require('../routes/bundRouter');
const conditionRouter = require('../routes/conditionRouter');
const catchmentTypeRouter = require('../routes/catchmentTypeRouter');
const croppingRouter = require('../routes/croppingRouter');
const crossSectionRouter = require('../routes/crossSectionRouter');
const damStoneRouter = require('../routes/damStoneRouter');
const distributionLandRouter = require('../routes/distributionLandRouter');
const depthSillLevelRouter = require('../routes/depthSillLevelRouter');
const exoticSpeciesRouter = require('../routes/exoticSpeciesRouter');
const familyNatureRouter = require('../routes/familyNatureRouter');
const fieldChannelTypeRouter = require('../routes/fieldChannelTypeRouter');
const fenceConditionRouter = require('../routes/fenceConditionRouter');
const fenceTypeRouter = require('../routes/fenceTypeRouter');
const ghatConditionRouter = require('../routes/ghatConditionRouter');
const inletTypeRouter = require('../routes/inletTypeRouter');
const natureInvestmentRouter = require('../routes/natureInvestmentRouter');
const ownershipRouter = require('../routes/ownershipRouter');
const outletTypeRouter = require('../routes/outletTypeRouter');
const ooraniFunctionRouter = require('../routes/ooraniFunctionRouter');
const mwlStonesRouter = require('../routes/mwlStonesRouter');
const pitchingConditionRouter = require('../routes/pitchingConditionRouter');
const sourceRouter = require('../routes/sourceRouter');
const spreadIssueRouter = require('../routes/spreadIssueRouter');
const sluicesSurplusTypeRouter = require('../routes/sluicesSurplusTypeRouter');
const surplusWeirRouter = require('../routes/surplusWeirRouter');
const slitTrapRouter = require('../routes/slitTrapRouter');
const streamIssueRouter = require('../routes/streamIssueRouter');
const shutterRouter = require('../routes/shutterRouter');
const shutterConditionRouter = require('../routes/shutterConditionRouter');
const stonePitchingRouter = require('../routes/stonePitchingRouter');
const typeRouter = require('../routes/typeRouter');
const tankFunctionRouter = require('../routes/tankFunctionRouter');
const tankTypeRouter = require('../routes/tankTypeRouter');
const tankUniquenessRouter = require('../routes/tankUniquenessRouter');
const templeTankTypeRouter = require('../routes/templeTankTypeRouter');
const tankIssueRouter = require('../routes/tankIssueRouter');
const freeCatchmentRouter = require('../routes/freeCatchmentRouter');
const waterSpreadAreaRouter = require('../routes/waterSpreadAreaRouter');
const surplusWeirsParameterRouter = require('../routes/surplusWeirsParameterRouter');
const invasiveSpeciesRouter = require('../routes/invasiveSpeciesRouter/index');
const retainingWallsRouter = require('../routes/retainingWallsRouter');
const retainingWallConditionRouter = require('../routes/retainingWallConditionRouter');
const encroachmentDetailsRouter = require('../routes/encroachmentDetailsRouter');
const surplusIssuesRouter = require('../routes/surplusIssuesRouter');

router.use('/availability', availabilityRouter);
router.use('/ayacutnoncultivation', ayacutnoncultivationRouter);
router.use('/boundary-drop-point', boundaryDropPointsRouter);
router.use('/bund-issue', bundIssueRouter);
router.use('/barrel-type', barrelTypeRouter);
router.use('/bund', bundRouter);
router.use('/condition', conditionRouter);
router.use('/catchment-type', catchmentTypeRouter);
router.use('/cropping', croppingRouter);
router.use('/cross-section', crossSectionRouter);
router.use('/dam-stone', damStoneRouter);
router.use('/distribution-land', distributionLandRouter);
router.use('/depth-sill-level', depthSillLevelRouter);
router.use('/exotic-species', exoticSpeciesRouter);
router.use('/family-nature', familyNatureRouter);
router.use('/field-channel-type', fieldChannelTypeRouter);
router.use('/fence-condition', fenceConditionRouter);
router.use('/fence-type', fenceTypeRouter);
router.use('/ghat-condition', ghatConditionRouter);
router.use('/inlet-type', inletTypeRouter);
router.use('/nature-investment', natureInvestmentRouter);
router.use('/ownership', ownershipRouter);
router.use('/outlet-type', outletTypeRouter);
router.use('/oorani-function', ooraniFunctionRouter);
router.use('/mwl-stones', mwlStonesRouter);
router.use('/pitching-condition', pitchingConditionRouter);
router.use('/source', sourceRouter);
router.use('/spread-issue', spreadIssueRouter);
router.use('/sluices-surplus-type', sluicesSurplusTypeRouter);
router.use('/surplus-weir', surplusWeirRouter);
router.use('/slit-trap', slitTrapRouter);
router.use('/stream-issue', streamIssueRouter);
router.use('/shutter', shutterRouter);
router.use('/shutter-condition', shutterConditionRouter);
router.use('/stone-pitching', stonePitchingRouter);
router.use('/type', typeRouter);
router.use('/tank-function', tankFunctionRouter);
router.use('/tank-type', tankTypeRouter);
router.use('/tank-uniqueness', tankUniquenessRouter);
router.use('/temple-tank-type', templeTankTypeRouter);
router.use('/tank-issue', tankIssueRouter);
router.use('/free-catchment', freeCatchmentRouter);
router.use('/water-spread-area', waterSpreadAreaRouter);
router.use('/surplus-weir-parameter', surplusWeirsParameterRouter);
router.use('/invasive-species', invasiveSpeciesRouter);
router.use('/retaining-walls', retainingWallsRouter);
router.use('/retaining-wall-condition', retainingWallConditionRouter);
router.use('/encroachment-details', encroachmentDetailsRouter);
router.use('/surplus-issues', surplusIssuesRouter);

module.exports = router;
